[{"/Users/n2204014/mi-console/mi-console-front/services/mi/babel.config.js":"1","/Users/n2204014/mi-console/mi-console-front/services/mi/src/@types/font.d.ts":"2","/Users/n2204014/mi-console/mi-console-front/services/mi/src/@types/module.d.ts":"3","/Users/n2204014/mi-console/mi-console-front/services/mi/src/@types/types.d.ts":"4","/Users/n2204014/mi-console/mi-console-front/services/mi/src/App.tsx":"5","/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/AxiosApi.ts":"6","/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/common/index.ts":"7","/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/index.ts":"8","/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/research/index.ts":"9","/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/research/researchBrandAwareness.ts":"10","/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/research/researchMarketShare.ts":"11","/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/research/researchSalesVolume.ts":"12","/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/research/researchSummary.ts":"13","/Users/n2204014/mi-console/mi-console-front/services/mi/src/components/Loader/Loading.tsx":"14","/Users/n2204014/mi-console/mi-console-front/services/mi/src/components/Loader/Spinner.tsx":"15","/Users/n2204014/mi-console/mi-console-front/services/mi/src/constants/element.ts":"16","/Users/n2204014/mi-console/mi-console-front/services/mi/src/constants/index.ts":"17","/Users/n2204014/mi-console/mi-console-front/services/mi/src/constants/responseMessage.ts":"18","/Users/n2204014/mi-console/mi-console-front/services/mi/src/hooks/events/useEventBus.tsx":"19","/Users/n2204014/mi-console/mi-console-front/services/mi/src/hooks/events/useEventListener.ts":"20","/Users/n2204014/mi-console/mi-console-front/services/mi/src/hooks/index.ts":"21","/Users/n2204014/mi-console/mi-console-front/services/mi/src/hooks/storage/useLocalStorage.ts":"22","/Users/n2204014/mi-console/mi-console-front/services/mi/src/hooks/storage/useSessionStorage.ts":"23","/Users/n2204014/mi-console/mi-console-front/services/mi/src/hooks/useRouter.ts":"24","/Users/n2204014/mi-console/mi-console-front/services/mi/src/hooks/useSelector.ts":"25","/Users/n2204014/mi-console/mi-console-front/services/mi/src/index.tsx":"26","/Users/n2204014/mi-console/mi-console-front/services/mi/src/pages/dashboard/index.tsx":"27","/Users/n2204014/mi-console/mi-console-front/services/mi/src/routes/PrivateRoute.tsx":"28","/Users/n2204014/mi-console/mi-console-front/services/mi/src/routes/index.tsx":"29","/Users/n2204014/mi-console/mi-console-front/services/mi/src/store/features/global.ts":"30","/Users/n2204014/mi-console/mi-console-front/services/mi/src/store/features/research.ts":"31","/Users/n2204014/mi-console/mi-console-front/services/mi/src/store/index.ts":"32","/Users/n2204014/mi-console/mi-console-front/services/mi/src/styles/global.ts":"33","/Users/n2204014/mi-console/mi-console-front/services/mi/src/styles/reset.ts":"34","/Users/n2204014/mi-console/mi-console-front/services/mi/src/utils/EventBus.ts":"35","/Users/n2204014/mi-console/mi-console-front/services/mi/src/utils/index.ts":"36","/Users/n2204014/mi-console/mi-console-front/services/mi/src/utils/utils.ts":"37","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/.storybook/main.js":"38","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/.storybook/preview.js":"39","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/@types/global.d.ts":"40","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Atom/Box.tsx":"41","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Atom/Button.tsx":"42","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Atom/Loader.tsx":"43","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Atom/Typography.tsx":"44","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Atom/index.ts":"45","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Organism/LineChart.tsx":"46","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Organism/VerticalBarChart.tsx":"47","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Organism/index.ts":"48","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/constants/color.ts":"49","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/constants/elements.ts":"50","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/constants/index.ts":"51","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/constants/message.ts":"52","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/constants/typography.ts":"53","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/index.ts":"54","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/stories/Button.stories.tsx":"55","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/stories/LineChart.stories.tsx":"56","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/stories/Loader.stories.tsx":"57","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/stories/VerticleBarChart.stories.tsx":"58"},{"size":403,"mtime":1659336782215,"results":"59","hashOfConfig":"60"},{"size":51,"mtime":1659502192538,"results":"61","hashOfConfig":"60"},{"size":0,"mtime":1659502191873,"results":"62","hashOfConfig":"60"},{"size":335,"mtime":1659502193676,"results":"63","hashOfConfig":"60"},{"size":666,"mtime":1659509830658,"results":"64","hashOfConfig":"60"},{"size":8013,"mtime":1659510229022,"results":"65","hashOfConfig":"60"},{"size":1748,"mtime":1659510165193,"results":"66","hashOfConfig":"60"},{"size":97,"mtime":1659510218306,"results":"67","hashOfConfig":"60"},{"size":411,"mtime":1659510166625,"results":"68","hashOfConfig":"60"},{"size":2335,"mtime":1659510167225,"results":"69","hashOfConfig":"60"},{"size":2376,"mtime":1659510168304,"results":"70","hashOfConfig":"60"},{"size":1844,"mtime":1659510167803,"results":"71","hashOfConfig":"60"},{"size":3805,"mtime":1659510143285,"results":"72","hashOfConfig":"60"},{"size":166,"mtime":1659510236575,"results":"73","hashOfConfig":"60"},{"size":338,"mtime":1659510238691,"results":"74","hashOfConfig":"60"},{"size":275,"mtime":1659510233892,"results":"75","hashOfConfig":"60"},{"size":82,"mtime":1659510234420,"results":"76","hashOfConfig":"60"},{"size":279,"mtime":1659510234989,"results":"77","hashOfConfig":"60"},{"size":1131,"mtime":1659510211668,"results":"78","hashOfConfig":"60"},{"size":909,"mtime":1659510193272,"results":"79","hashOfConfig":"60"},{"size":454,"mtime":1659502206112,"results":"80","hashOfConfig":"60"},{"size":1096,"mtime":1659510194517,"results":"81","hashOfConfig":"60"},{"size":1107,"mtime":1659510195050,"results":"82","hashOfConfig":"60"},{"size":963,"mtime":1659510240474,"results":"83","hashOfConfig":"60"},{"size":310,"mtime":1659510242167,"results":"84","hashOfConfig":"60"},{"size":173,"mtime":1659510458329,"results":"85","hashOfConfig":"60"},{"size":975,"mtime":1659507556936,"results":"86","hashOfConfig":"60"},{"size":458,"mtime":1659502210659,"results":"87","hashOfConfig":"60"},{"size":572,"mtime":1659504118701,"results":"88","hashOfConfig":"60"},{"size":1234,"mtime":1659507795757,"results":"89","hashOfConfig":"60"},{"size":2976,"mtime":1659507796409,"results":"90","hashOfConfig":"60"},{"size":1086,"mtime":1659507796939,"results":"91","hashOfConfig":"60"},{"size":147,"mtime":1659507797919,"results":"92","hashOfConfig":"60"},{"size":1404,"mtime":1659507798393,"results":"93","hashOfConfig":"60"},{"size":2034,"mtime":1659509832581,"results":"94","hashOfConfig":"60"},{"size":65,"mtime":1659507799543,"results":"95","hashOfConfig":"60"},{"size":1765,"mtime":1659510351381,"results":"96","hashOfConfig":"60"},{"size":618,"mtime":1659510289400,"results":"97","hashOfConfig":"60"},{"size":324,"mtime":1659510289866,"results":"98","hashOfConfig":"60"},{"size":72,"mtime":1659502229522,"results":"99","hashOfConfig":"60"},{"size":1542,"mtime":1659504368965,"results":"100","hashOfConfig":"60"},{"size":850,"mtime":1659502231168,"results":"101","hashOfConfig":"60"},{"size":846,"mtime":1659502231767,"results":"102","hashOfConfig":"60"},{"size":862,"mtime":1659502232547,"results":"103","hashOfConfig":"60"},{"size":155,"mtime":1659502230591,"results":"104","hashOfConfig":"60"},{"size":1034,"mtime":1659504253104,"results":"105","hashOfConfig":"60"},{"size":1019,"mtime":1659504251383,"results":"106","hashOfConfig":"60"},{"size":65,"mtime":1659504254189,"results":"107","hashOfConfig":"60"},{"size":1570,"mtime":1659510269506,"results":"108","hashOfConfig":"60"},{"size":623,"mtime":1659510270098,"results":"109","hashOfConfig":"60"},{"size":110,"mtime":1659510262469,"results":"110","hashOfConfig":"60"},{"size":925,"mtime":1659510263009,"results":"111","hashOfConfig":"60"},{"size":1364,"mtime":1659510263516,"results":"112","hashOfConfig":"60"},{"size":225,"mtime":1659510267380,"results":"113","hashOfConfig":"60"},{"size":504,"mtime":1659510264482,"results":"114","hashOfConfig":"60"},{"size":1271,"mtime":1659510265043,"results":"115","hashOfConfig":"60"},{"size":455,"mtime":1659510265529,"results":"116","hashOfConfig":"60"},{"size":1147,"mtime":1659510265949,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u0gcqu",{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/n2204014/mi-console/mi-console-front/services/mi/babel.config.js",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/@types/font.d.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/@types/module.d.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/@types/types.d.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/App.tsx",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/AxiosApi.ts",["305","306","307","308"],[],"import axios, { AxiosInstance, AxiosResponse, AxiosError, AxiosRequestHeaders } from 'axios';\n\n// Api\nimport { CodeType, CommonRequestConfig, getDefaultConfig, StatusCode } from '@/api/';\n\n// Constants\nimport { ResponseCodeMessage, EventName } from '@/constants/';\n\n// Utils\nimport { hashCode, hasProperty, isObjectValue, isStringValue } from '@/utils';\n\n// Store\nimport store, { showSpinner } from '@/store/';\n\n/* NetWork 에러 메시지 */\nexport const enum NetworkErrorMessage {\n  NETWORK_OFFLINE = '네트워크 연결상태를 확인한 뒤, 다시 시도해주세요.',\n  CONNECTION_REFUSED = '서버와 통신이 원할하지 않습니다.',\n}\n\n/**\n * AxiosApi 클래스 객체 정의\n */\nexport class AxiosApi {\n  private static thisInstance: AxiosApi; // singleton instance\n  private instance: AxiosInstance;\n  private pending: Map<number, CommonRequestConfig>;\n  private isOnline = true;\n\n  /**\n   * 생성자 함수\n   * @param config 설정값 객체\n   */\n  constructor(config?: CommonRequestConfig) {\n    this.instance = axios.create(config || getDefaultConfig());\n    this.pending = new Map();\n\n    const { interceptors } = this.instance;\n\n    interceptors.request.use(this.requestInterceptor.bind(this), Promise.reject);\n    interceptors.response.use(\n      this.responseInterceptor.bind(this),\n      this.responseErrorHandler.bind(this)\n    );\n\n    this.initEventListenr();\n  }\n\n  /**\n   * Axios 객체 반환\n   * @returns Axios 객체\n   */\n  public static getInstance(): AxiosApi {\n    if (!this.thisInstance) {\n      this.thisInstance = new AxiosApi();\n    }\n\n    return this.thisInstance;\n  }\n\n  /** Event Listenr 등록 */\n  private initEventListenr() {\n    window.addEventListener(EventName.Online, this.handleConnectionChange.bind(this));\n    window.addEventListener(EventName.OffLine, this.handleConnectionChange.bind(this));\n  }\n\n  /**\n   * Request 인터셉터\n   * @param config 설정값 객체\n   * @returns config 객체\n   */\n  private async requestInterceptor(config: CommonRequestConfig): Promise<CommonRequestConfig> {\n    const hashCode = this.hashing(config);\n\n    if (this.pending.has(hashCode)) {\n      config.cancelToken = new axios.CancelToken((canceler) => canceler('Cancel duplicated'));\n      return config;\n    }\n\n    const { doNotShowSpinner, authRequired, isEmailRequired } = config;\n\n    config.cancelToken = new axios.CancelToken((canceler) => (config.canceler = canceler));\n\n    if (!doNotShowSpinner) {\n      store.dispatch(showSpinner({ isShowSpinner: true })); // Spinner 노출 유무\n    }\n\n    if (isEmailRequired) {\n      const { headers } = config;\n\n      (headers as AxiosRequestHeaders)['email'] = 'lee.jang.heon@netmarble.com';\n    }\n\n    this.addPending(config);\n\n    return config;\n  }\n\n  /** 모든 Request 취소 */\n  public removeAllPending() {\n    const pending = this.pending;\n    const arr = Array.from(pending.keys());\n\n    for (const hashCode of arr) {\n      const config = pending.get(hashCode) as CommonRequestConfig;\n\n      if (config.canceler && !axios.isCancel(config)) {\n        config.canceler('abort request');\n      }\n\n      this.removePending(config);\n    }\n  }\n\n  /**\n   * Response 인터셉터\n   * @param response 응답 객체\n   * @returns 응답 객체\n   */\n  private async responseInterceptor(response: AxiosResponse): Promise<AxiosResponse> {\n    const { config } = response;\n    const { doNotShowSpinner, skipAlert } = config as CommonRequestConfig;\n\n    this.removePending(config);\n\n    if (!doNotShowSpinner) {\n      store.dispatch(showSpinner({ isShowSpinner: false }));\n    }\n\n    if (!skipAlert) {\n      const { data } = response;\n      const { code } = data;\n\n      if (code !== CodeType.SUCCESS) {\n        // const status = AlertStatus.Fail;\n        // const title = `${ResponseCodeMessage[code]}`;\n        // store.dispatch(showAlertDialog({ alertData: { title, status } }));\n      }\n    }\n\n    return response;\n  }\n\n  /**\n   * Request 요청\n   * @param config 요청 설정 객체\n   * @returns 응답 객체\n   */\n  public request<T>(config: CommonRequestConfig): Promise<AxiosResponse<T>> {\n    return this.instance.request<T>(config);\n  }\n\n  /**\n   * 네트워크 에러 객체 생성\n   * @param arg 에러 객체 또는 메시지\n   * @returns 응답 객체\n   */\n  private createError(arg?: string | Error): Error {\n    const ret = new Error();\n\n    if (arg instanceof Error) {\n      const { name, message, stack } = arg;\n\n      ret.name = name;\n      ret.message = message;\n      ret.stack = stack;\n    } else if (isStringValue(arg)) {\n      ret.name = arg as string;\n    }\n\n    return ret;\n  }\n\n  /**\n   * CancelToken을 위한 request configuration Hash값 반환\n   * @param config axios config 객체\n   * @returns hash code 문자열\n   */\n  private hashing(config: CommonRequestConfig): number {\n    const { url, method, data, params, headers } = config;\n    const hdr: Record<string, string | number | boolean> = {};\n    const exclude = ['content-type', 'Accept', 'Authorization', 'date'];\n\n    for (const key in headers) {\n      if (\n        !isObjectValue(headers[key]) &&\n        hasProperty(headers, key) &&\n        !exclude.some((exc) => exc === key)\n      ) {\n        hdr[key] = headers[key];\n      }\n    }\n\n    const converter = (origin: object): unknown => {\n      if (!origin) {\n        return '';\n      }\n\n      if (isStringValue(origin)) {\n        return origin;\n      }\n\n      if (origin instanceof FormData) {\n        const ret: Record<string, FormDataEntryValue> = {};\n\n        origin.forEach((value, key) => {\n          ret[key] = value;\n        });\n\n        return JSON.stringify(ret);\n      }\n\n      if (isObjectValue(origin)) {\n        return JSON.stringify(origin);\n      }\n\n      return '';\n    };\n\n    let key = (url || '') + (method || '');\n\n    key += converter(params);\n    key += converter(data);\n    return hashCode(key);\n  }\n\n  /**\n   * request 요청 설정 객체 저장\n   * - Cancel Token을 위함\n   * @param config 요청 설정값 객체\n   */\n  private addPending(config: CommonRequestConfig): void {\n    const key = this.hashing(config);\n\n    if (!this.pending.has(key)) {\n      this.pending.set(key, config);\n    }\n  }\n\n  /**\n   * request 요청 설정 객체 제거\n   * - Cancel Token을 위함\n   * @param config 요청 설정값 객체\n   */\n  private removePending(config: CommonRequestConfig): void {\n    const key = this.hashing(config);\n\n    this.pending.delete(key);\n  }\n\n  /**\n   * 응답 에러시 인터셉터 구현부\n   * @param error 에러 객체\n   * @returns 에러 객체\n   */\n  private async responseErrorHandler(error: AxiosError) {\n    const config = error.config as CommonRequestConfig;\n    const { request, response } = error;\n\n    if (!config || axios.isCancel(error)) {\n      return error;\n    }\n\n    const { doNotShowSpinner, skipAlert } = config;\n\n    this.removePending(config);\n\n    if (!doNotShowSpinner) {\n      store.dispatch(showSpinner({ isShowSpinner: false }));\n    }\n\n    const retErr = this.createError(error);\n    const { status } = response as AxiosResponse;\n\n    if (status === StatusCode.AuthRqeuired) {\n    }\n\n    if (!this.isOnline && request) {\n      retErr.message = NetworkErrorMessage.NETWORK_OFFLINE;\n    } else if (!response && (this.isOnline || !error.request)) {\n      retErr.message = NetworkErrorMessage.CONNECTION_REFUSED;\n    }\n\n    if (!skipAlert) {\n      // const status = AlertStatus.Fail;\n      // const { message } = retErr;\n      // store.dispatch(\n      //   showAlertDialog({ alertData: { title: `${message}`, status } })\n      // );\n    }\n\n    return retErr;\n  }\n\n  /**\n   * 네트워크 상태값 체크\n   * @param event 이벤트 객체\n   */\n  private handleConnectionChange(event: Event): void {\n    const { type: eventType } = event;\n    const isOnline = eventType === EventName.Online;\n\n    if (!isOnline && eventType !== EventName.OffLine) {\n      throw new Error('unknown Axios Event');\n    }\n\n    this.isOnline = isOnline;\n  }\n}\n\nexport const httpClient = AxiosApi.getInstance();\n","/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/common/index.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/index.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/research/index.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/research/researchBrandAwareness.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/research/researchMarketShare.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/research/researchSalesVolume.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/api/research/researchSummary.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/components/Loader/Loading.tsx",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/components/Loader/Spinner.tsx",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/constants/element.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/constants/index.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/constants/responseMessage.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/hooks/events/useEventBus.tsx",["309"],[],"import { eventBus } from '@/utils/EventBus';\r\nimport { useEffect, useState } from 'react';\r\n\r\n/**\r\n * 이벤트 버스 훅\r\n */\r\nconst useEventBus = () => {\r\n  const {\r\n    publish: publishEvent,\r\n    subscribe: eventSubscribe,\r\n    unsubscribe,\r\n    unsubscribeEvent,\r\n  } = eventBus;\r\n  const [eventIds, setEventIds] = useState<string[]>([]);\r\n\r\n  /** 사용할 이벤트 명 */\r\n  const EventNames = {\r\n    ResendOtp: 'resendOtp',\r\n    Login: 'login',\r\n    HideAlert: 'hideAlert',\r\n  };\r\n\r\n  /** 초기화 */\r\n  useEffect(() => {\r\n    return () => {\r\n      for (const id of eventIds) {\r\n        unsubscribe(id);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  /**\r\n   * 구독 이벤트\r\n   * @param event 이벤트 명\r\n   * @param callback  이벤트 콜백\r\n   * @returns 이벤트 아이디\r\n   */\r\n  const subscribeEvent = (event: string, callback: CallbackFunction) => {\r\n    const id = eventSubscribe(event, callback);\r\n\r\n    setEventIds([...eventIds, id]);\r\n\r\n    return id;\r\n  };\r\n\r\n  return {\r\n    publishEvent,\r\n    subscribeEvent,\r\n    unsubscribe,\r\n    unsubscribeEvent,\r\n    EventNames,\r\n  };\r\n};\r\n\r\nexport default useEventBus;\r\n","/Users/n2204014/mi-console/mi-console-front/services/mi/src/hooks/events/useEventListener.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/hooks/index.ts",["310","311"],[],"import useRouter from '@/hooks/useRouter';\nimport useSelector from '@/hooks/useSelector';\nimport useEventBus from '@/hooks/events/useEventBus';\nimport useEventListener from '@/hooks/events/useEventListener';\nimport useLocalStorage from '@/hooks/storage/useLocalStorage';\nimport useSessionStorage from '@/hooks/storage/useSessionStorage';\n\nexport {\n  useRouter,\n  useSelector,\n  useEventBus,\n  useEventListener,\n  useLocalStorage,\n  useSessionStorage,\n};\n","/Users/n2204014/mi-console/mi-console-front/services/mi/src/hooks/storage/useLocalStorage.ts",["312","313"],[],"import { useEffect, useState } from 'react';\n\ntype AllowType = string | boolean | object;\n\n/**\n * Local Storage 훅 사용\n * @param key 키값\n * @param initialState 초기 값\n */\nexport const useLocalStorage = (key: string, initialState: AllowType) => {\n  const localStorage = window.localStorage;\n  const [state, setState] = useState(() => {\n    const storedValue = localStorage.getItem(key);\n    return storedValue ? JSON.parse(storedValue) : initialState;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  useEffect(() => {\n    /**\n     * Local Storage 변화 시\n     * @param e Storage 이벤트\n     * @returns 이벤트 해제\n     */\n    const onModifyStorage = (e: StorageEvent) => {\n      if (e.storageArea !== localStorage || key !== e.key) {\n        return;\n      }\n      setState(JSON.parse(e.newValue ?? '[]'));\n    };\n\n    window.addEventListener('storage', onModifyStorage);\n    return () => window.removeEventListener('storage', onModifyStorage);\n  }, []);\n\n  return [state, setState];\n};\n\nexport default useLocalStorage;\n","/Users/n2204014/mi-console/mi-console-front/services/mi/src/hooks/storage/useSessionStorage.ts",["314","315"],[],"import { useEffect, useState } from 'react';\n\ntype AllowType = string | boolean | object;\n\n/**\n * Session Storage 훅 사용\n * @param key 키값\n * @param initialState 값\n */\nexport const useSessionStorage = (key: string, initialState: AllowType) => {\n  const sessionStorage = window.sessionStorage;\n  const [state, setState] = useState(() => {\n    const storedValue = sessionStorage.getItem(key);\n    return storedValue ? JSON.parse(storedValue) : initialState;\n  });\n\n  useEffect(() => {\n    sessionStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  useEffect(() => {\n    /**\n     * Session Storage 변화 시\n     * @param e Storage 이벤트\n     * @returns 이벤트 해제\n     */\n    const onModifyStorage = (e: StorageEvent) => {\n      if (e.storageArea !== sessionStorage || key !== e.key) {\n        return;\n      }\n      setState(JSON.parse(e.newValue ?? '[]'));\n    };\n\n    window.addEventListener('storage', onModifyStorage);\n    return () => window.removeEventListener('storage', onModifyStorage);\n  }, []);\n\n  return [state, setState];\n};\n\nexport default useSessionStorage;\n","/Users/n2204014/mi-console/mi-console-front/services/mi/src/hooks/useRouter.ts",["316"],[],"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n// Store\nimport { abortAllPending } from '@/store/';\n\n/** Router 이벤트 콜백 */\ntype HookCallback = {\n  /** 진입 callback */\n  onEnter: () => void;\n  /** 이탈 callback */\n  onLeave: () => void;\n  /** 다음 이동 전 callback */\n  onNext?: () => void;\n};\n\n/**\n * Router Hook Event 정의\n * @param callback onEnter/onLeave 훅 정의\n * @returns history 객체\n */\nconst useRouterHook = (callback: Partial<HookCallback> = {}) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const { onEnter, onLeave, onNext } = callback;\n\n    onEnter?.();\n\n    const unlisten = history.listen(() => {\n      onNext?.();\n    });\n\n    return () => {\n      dispatch(abortAllPending());\n      onLeave?.();\n      unlisten();\n    };\n  }, [history]);\n\n  return history;\n};\n\nexport default useRouterHook;\n","/Users/n2204014/mi-console/mi-console-front/services/mi/src/hooks/useSelector.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/index.tsx",["317"],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/pages/dashboard/index.tsx",["318"],[],"import { unwrapResult } from '@reduxjs/toolkit';\nimport { useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n// Components\nimport { Box } from 'mi-ui';\n\n// Store\nimport { AppThunkDispatch, requestResearchBrandAwareness } from '@/store/';\n\n// Api\nimport { HalfYear } from '@/api/';\n\n/**\n * DashBoard 페이지\n * @returns DashBoard 페이지\n */\nconst DashBoard = () => {\n  const dispatch = useDispatch<AppThunkDispatch>();\n\n  /** 브랜드 인지도 요청 */\n  const requestBrandAwareness = useCallback(async () => {\n    const params = { year: '2021', half: HalfYear.First };\n    const res = unwrapResult(await dispatch(requestResearchBrandAwareness(params)));\n    const { isError } = res;\n\n    if (isError) {\n      new Error('Domain Request Error');\n    }\n  }, []);\n\n  /** 도메인 정보 요청 */\n  useEffect(() => {\n    requestBrandAwareness();\n  }, [requestBrandAwareness]);\n\n  return <Box>Dashboard</Box>;\n};\n\nexport default DashBoard;\n","/Users/n2204014/mi-console/mi-console-front/services/mi/src/routes/PrivateRoute.tsx",["319"],[],"import { Route } from 'react-router-dom';\n\n/** 컴포넌트 Property */\ntype Props = {\n  path: string;\n  component: JSX.Element;\n  [k: string]: unknown;\n};\n\n/**\n * 라우터 컴포넌트\n * @param props 컴포넌트 Property\n * @returns 라우터 컴포넌트\n */\nconst PrivateRoute = ({ component: Component, isAuthNeed = true, path, ...rest }: Props) => {\n  return <Route path={path} {...rest} render={() => Component} />;\n};\n\nexport default PrivateRoute;\n","/Users/n2204014/mi-console/mi-console-front/services/mi/src/routes/index.tsx",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/store/features/global.ts",["320","321"],[],"import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\n// Store\nimport store, { RootState } from '@/store';\n\n// Api\nimport { httpClient } from '@/api/';\n\n/** Spinner 보여주기/숨김 */\ninterface ShowSpinnerActionPayload {\n  isShowSpinner: boolean;\n}\n\n/** 상태 타입 */\ntype StateType = {\n  isShowSpinner: boolean;\n};\n\nconst name = 'global';\n\nconst initialState: StateType = {\n  isShowSpinner: false,\n};\n\n/** Reducer 정의 */\nconst reducers = {\n  /**\n   * spinner 보여 주기\n   */\n  showSpinner: (state: StateType, action: PayloadAction<ShowSpinnerActionPayload>) => {\n    const { isShowSpinner } = action.payload;\n\n    state.isShowSpinner = isShowSpinner;\n  },\n\n  /**\n   * 모든 API request 취소\n   */\n  abortAllPending: () => {\n    httpClient.removeAllPending();\n  },\n};\n\n/** Thunk 정의 */\nconst asyncThunk = {};\n\n/* CreateSlice 정의 */\nexport const globalSlice = createSlice({\n  name,\n  initialState,\n  reducers,\n});\n\n// Selector 정의\nexport const isShowSpinner = (state: RootState) => state.global.isShowSpinner;\n\n// Thunk 정의\nexport const {} = asyncThunk;\n\n// Action 정의\nexport const { showSpinner, abortAllPending } = globalSlice.actions;\n\nexport default globalSlice.reducer;\n","/Users/n2204014/mi-console/mi-console-front/services/mi/src/store/features/research.ts",["322"],[],"import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\n\n// Api\nimport {\n  BrandAwarenessRequestField,\n  getResearchBrandAwarenessConfig,\n  getResearchMarketShareConfig,\n  getResearchSalesVolumeConfig,\n  getResearchSummaryConfig,\n  httpClient,\n  MarketShareRequestField,\n  ResearchBrandAwarenessResponseDto,\n  ResearchMarketShareResponseDto,\n  ResearchSalesVolumeResponseDto,\n  ResearchSummaryRequestField,\n  ResearchSummaryResponseDto,\n  SalesVolumeRequestField,\n} from '@/api/';\n\nconst name = 'research';\n\nconst initialState = {};\n\nconst reducers = {};\n\n// Thunk 정의\nconst asyncThunk = {\n  /** 브랜드 인지도 요청 */\n  requestResearchBrandAwareness: createAsyncThunk(\n    `${name}/brandAwareness`,\n    async (\n      data: BrandAwarenessRequestField\n    ): Promise<CommonResponseResult<ResearchBrandAwarenessResponseDto>> => {\n      const response = await httpClient.request<ResearchBrandAwarenessResponseDto>(\n        getResearchBrandAwarenessConfig(data)\n      );\n      const isError = response instanceof Error;\n      const { data: resData } = { ...response };\n\n      return { isError, ...resData };\n    }\n  ),\n\n  /** 시장 점유율 요청 */\n  requestResearchMarketShare: createAsyncThunk(\n    `${name}/marketShare`,\n    async (\n      data: MarketShareRequestField\n    ): Promise<CommonResponseResult<ResearchMarketShareResponseDto>> => {\n      const response = await httpClient.request<ResearchMarketShareResponseDto>(\n        getResearchMarketShareConfig(data)\n      );\n      const isError = response instanceof Error;\n      const { data: resData } = { ...response };\n\n      return { isError, ...resData };\n    }\n  ),\n\n  /** 시장 판매량 요청 */\n  requestResearchSalesVolume: createAsyncThunk(\n    `${name}/salesVolume`,\n    async (\n      data: SalesVolumeRequestField\n    ): Promise<CommonResponseResult<ResearchSalesVolumeResponseDto>> => {\n      const response = await httpClient.request<ResearchSalesVolumeResponseDto>(\n        getResearchSalesVolumeConfig(data)\n      );\n      const isError = response instanceof Error;\n      const { data: resData } = { ...response };\n\n      return { isError, ...resData };\n    }\n  ),\n\n  /** 시장 요약 요청 */\n  requestResearchSummary: createAsyncThunk(\n    `${name}/researchSummary`,\n    async (\n      data: ResearchSummaryRequestField\n    ): Promise<CommonResponseResult<ResearchSummaryResponseDto>> => {\n      const response = await httpClient.request<ResearchSummaryResponseDto>(\n        getResearchSummaryConfig(data)\n      );\n      const isError = response instanceof Error;\n      const { data: resData } = { ...response };\n\n      return { isError, ...resData };\n    }\n  ),\n};\n\n/* CreateSlice 정의 */\nexport const researchSlice = createSlice({\n  name,\n  initialState,\n  reducers,\n});\n\n// Selector\n\n// Thunk 정의\nexport const { requestResearchBrandAwareness } = asyncThunk;\n\n// Action 정의\nexport const {} = researchSlice.actions;\n\nexport default researchSlice.reducer;\n","/Users/n2204014/mi-console/mi-console-front/services/mi/src/store/index.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/styles/global.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/styles/reset.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/utils/EventBus.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/utils/index.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi/src/utils/utils.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/.storybook/main.js",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/.storybook/preview.js",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/@types/global.d.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Atom/Box.tsx",["323"],[],"import { HTMLAttributes, memo, PropsWithChildren, ReactElement } from 'react';\n\n// Emotion\nimport styled from '@emotion/styled';\nimport { SerializedStyles } from '@emotion/react';\n\n// Constants\nimport { ElementType } from '../../constants/';\n\n/** Block Element Type */\ntype BloackType =\n  | ElementType.Div\n  | ElementType.Paragraph\n  | ElementType.Ul\n  | ElementType.Li\n  | ElementType.Dl\n  | ElementType.Dd;\n\n/** 컴포넌트 Property */\ninterface Props extends HTMLAttributes<HTMLElement> {\n  elementType?: keyof JSX.IntrinsicElements;\n  styles?: SerializedStyles;\n}\n\n/**\n * Box 컴포넌트\n * @param props 컴포넌트 property\n * @returns Box 컴포넌트\n */\nexport const Box = memo(\n  ({\n    elementType = ElementType.Div,\n    children,\n    ...props\n  }: PropsWithChildren<Props>): ReactElement => {\n    const Element = blockElement[elementType];\n\n    return <Element {...props}>{children}</Element>;\n  }\n);\n\n/** Style 컴포넌트 Property */\ninterface StyleProps {\n  styles?: SerializedStyles;\n}\n\n/** Block Element Style */\nconst blockElement = {\n  [ElementType.Div]: styled.div<StyleProps>`\n    ${(props) => props.styles}\n  `,\n  [ElementType.Paragraph]: styled.p<StyleProps>`\n    ${(props) => props.styles}\n  `,\n  [ElementType.Li]: styled.li<StyleProps>`\n    ${(props) => props.styles}\n  `,\n  [ElementType.Ul]: styled.ul<StyleProps>`\n    ${(props) => props.styles}\n  `,\n  [ElementType.Dl]: styled.ul<StyleProps>`\n    ${(props) => props.styles}\n  `,\n  [ElementType.Dd]: styled.ul<StyleProps>`\n    ${(props) => props.styles}\n  `,\n};\n","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Atom/Button.tsx",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Atom/Loader.tsx",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Atom/Typography.tsx",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Atom/index.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Organism/LineChart.tsx",["324"],[],"import { memo, ReactElement } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n/** Chart Data  */\ntype ChartDataSet = {\n  label: string;\n  data: any[];\n  fill?: boolean;\n  backgroundColor: string;\n  borderColor: string;\n};\n\ntype Position = 'left' | 'right' | 'top' | 'bottom';\n\n/** 컴포넌트 Property */\ninterface Props {\n  labels: string[];\n  datasets: ChartDataSet[];\n  position?: Position;\n}\n\n/**\n * LayerAlert 컴포넌트\n * @param props 컴포넌트 property\n * @returns LayerAlert 컴포넌트\n */\nexport const LineChart = memo(({ labels, datasets, position = 'top' }: Props): ReactElement => {\n  const data = { labels, datasets };\n  const plugins = { legend: { position } };\n  const options = { responsive: true, plugins };\n\n  return <Line options={options} data={data} />;\n});\n","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Organism/VerticalBarChart.tsx",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/components/Organism/index.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/constants/color.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/constants/elements.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/constants/index.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/constants/message.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/constants/typography.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/index.ts",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/stories/Button.stories.tsx",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/stories/LineChart.stories.tsx",[],[],"/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/stories/Loader.stories.tsx",["325"],[],"import { ComponentStory, ComponentMeta } from '@storybook/react';\n\n// Components\nimport { Loader as LoaderComp, Box } from '../components/Atom';\n\nexport default {\n  title: 'Atom/Loader',\n  component: LoaderComp,\n} as ComponentMeta<typeof LoaderComp>;\n\nconst Template: ComponentStory<typeof LoaderComp> = (args: any) => {\n  return (\n    <Box className='basic_ip'>\n      <LoaderComp {...args} />\n    </Box>\n  );\n};\n\nexport const Loader = Template.bind({});\n","/Users/n2204014/mi-console/mi-console-front/services/mi-ui/src/stories/VerticleBarChart.stories.tsx",[],[],{"ruleId":"326","severity":1,"message":"327","line":7,"column":10,"nodeType":"328","messageId":"329","endLine":7,"endColumn":29},{"ruleId":"330","severity":1,"message":"331","line":76,"column":32,"nodeType":"332","endLine":76,"endColumn":49},{"ruleId":"326","severity":1,"message":"333","line":80,"column":31,"nodeType":"328","messageId":"329","endLine":80,"endColumn":43},{"ruleId":"330","severity":1,"message":"331","line":82,"column":30,"nodeType":"332","endLine":82,"endColumn":47},{"ruleId":"334","severity":1,"message":"335","line":30,"column":6,"nodeType":"336","endLine":30,"endColumn":8,"suggestions":"337"},{"ruleId":"338","severity":1,"message":"339","line":5,"column":8,"nodeType":"340","endLine":5,"endColumn":23},{"ruleId":"338","severity":1,"message":"341","line":6,"column":8,"nodeType":"340","endLine":6,"endColumn":25},{"ruleId":"334","severity":1,"message":"342","line":19,"column":6,"nodeType":"336","endLine":19,"endColumn":18,"suggestions":"343"},{"ruleId":"334","severity":1,"message":"344","line":36,"column":6,"nodeType":"336","endLine":36,"endColumn":8,"suggestions":"345"},{"ruleId":"334","severity":1,"message":"346","line":19,"column":6,"nodeType":"336","endLine":19,"endColumn":18,"suggestions":"347"},{"ruleId":"334","severity":1,"message":"348","line":36,"column":6,"nodeType":"336","endLine":36,"endColumn":8,"suggestions":"349"},{"ruleId":"334","severity":1,"message":"350","line":41,"column":6,"nodeType":"336","endLine":41,"endColumn":15,"suggestions":"351"},{"ruleId":"326","severity":1,"message":"352","line":2,"column":13,"nodeType":"328","messageId":"329","endLine":2,"endColumn":19},{"ruleId":"334","severity":1,"message":"353","line":29,"column":6,"nodeType":"336","endLine":29,"endColumn":8,"suggestions":"354"},{"ruleId":"326","severity":1,"message":"355","line":15,"column":47,"nodeType":"328","messageId":"329","endLine":15,"endColumn":57},{"ruleId":"326","severity":1,"message":"356","line":1,"column":10,"nodeType":"328","messageId":"329","endLine":1,"endColumn":26},{"ruleId":"326","severity":1,"message":"357","line":4,"column":8,"nodeType":"328","messageId":"329","endLine":4,"endColumn":13},{"ruleId":"326","severity":1,"message":"358","line":1,"column":41,"nodeType":"328","messageId":"329","endLine":1,"endColumn":54},{"ruleId":"326","severity":1,"message":"359","line":11,"column":6,"nodeType":"328","messageId":"329","endLine":11,"endColumn":16},{"ruleId":"360","severity":1,"message":"361","line":19,"column":9,"nodeType":"362","messageId":"363","endLine":19,"endColumn":12,"suggestions":"364"},{"ruleId":"360","severity":1,"message":"361","line":11,"column":60,"nodeType":"362","messageId":"363","endLine":11,"endColumn":63,"suggestions":"365"},"@typescript-eslint/no-unused-vars","'ResponseCodeMessage' is defined but never used.","Identifier","unusedVar","import/no-named-as-default-member","Caution: `axios` also has a named export `CancelToken`. Check if you meant to write `import {CancelToken} from 'axios'` instead.","MemberExpression","'authRequired' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'eventIds' and 'unsubscribe'. Either include them or remove the dependency array.","ArrayExpression",["366"],"import/no-named-as-default","Using exported name 'useLocalStorage' as identifier for default export.","ImportDefaultSpecifier","Using exported name 'useSessionStorage' as identifier for default export.","React Hook useEffect has a missing dependency: 'localStorage'. Either include it or remove the dependency array.",["367"],"React Hook useEffect has missing dependencies: 'key' and 'localStorage'. Either include them or remove the dependency array.",["368"],"React Hook useEffect has a missing dependency: 'sessionStorage'. Either include it or remove the dependency array.",["369"],"React Hook useEffect has missing dependencies: 'key' and 'sessionStorage'. Either include them or remove the dependency array.",["370"],"React Hook useEffect has missing dependencies: 'callback' and 'dispatch'. Either include them or remove the dependency array.",["371"],"'dotenv' is defined but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["372"],"'isAuthNeed' is assigned a value but never used.","'createAsyncThunk' is defined but never used.","'store' is defined but never used.","'PayloadAction' is defined but never used.","'BloackType' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["373","374"],["375","376"],{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"messageId":"391","fix":"392","desc":"393"},{"messageId":"394","fix":"395","desc":"396"},{"messageId":"391","fix":"397","desc":"393"},{"messageId":"394","fix":"398","desc":"396"},"Update the dependencies array to be: [eventIds, unsubscribe]",{"range":"399","text":"400"},"Update the dependencies array to be: [key, localStorage, state]",{"range":"401","text":"402"},"Update the dependencies array to be: [key, localStorage]",{"range":"403","text":"404"},"Update the dependencies array to be: [key, sessionStorage, state]",{"range":"405","text":"406"},"Update the dependencies array to be: [key, sessionStorage]",{"range":"407","text":"408"},"Update the dependencies array to be: [callback, dispatch, history]",{"range":"409","text":"410"},"Update the dependencies array to be: [dispatch]",{"range":"411","text":"412"},"suggestUnknown",{"range":"413","text":"414"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"413","text":"415"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"416","text":"414"},{"range":"416","text":"415"},[606,608],"[eventIds, unsubscribe]",[532,544],"[key, localStorage, state]",[988,990],"[key, localStorage]",[541,553],"[key, sessionStorage, state]",[1001,1003],"[key, sessionStorage]",[856,865],"[callback, dispatch, history]",[766,768],"[dispatch]",[390,393],"unknown","never",[311,314]]